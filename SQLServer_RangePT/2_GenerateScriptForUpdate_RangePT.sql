

DECLARE
@Record_Count INT = 1,
@Max_LoopCount INT = 0,  /* prevent infinite loop */

@text_sql NVARCHAR(MAX) = '',

@ATTR_DATA NVARCHAR(MAX) = N'',

@ITEM_ID BIGINT,
@REPOSITORY_ID BIGINT,
@HAS_ERROR_IND BIGINT,
@LAST_UPDATE_DATETIME DATETIME,
@AddInElementInXML NVARCHAR(500) = '<F_999>000</F_999>',
@IsPartitionKeyInFilter BIT = 1,    /* If add REPOSITORY_ID (range partition key) to filter */
@Is_FullText_Enabled BIT = 0;

PRINT '';
IF EXISTS(SELECT 1
FROM sys.fulltext_indexes fti
INNER JOIN sys.tables t ON fti.object_id = t.object_id
INNER JOIN sys.columns c ON t.object_id = c.object_id
INNER JOIN sys.fulltext_index_columns ftc ON c.object_id = ftc.object_id AND c.column_id = ftc.column_id
WHERE t.[name] = 'B_MASTER_REPOSITORY_ITEM' AND fti.is_enabled = 1)
BEGIN
	SET @Is_FullText_Enabled = 1;
	PRINT 'ALTER FULLTEXT INDEX ON [B_MASTER_REPOSITORY_ITEM] DISABLE;';
END;




/*** Start Lines ***/
PRINT  '';
PRINT 'DECLARE @database_id INT;'
PRINT 'SELECT @database_id = database_id FROM sys.databases where name = DB_NAME();';
PRINT 'DBCC FLUSHPROCINDB(@database_id);';
PRINT 'DBCC FREEPROCCACHE;';

PRINT 'SET NOCOUNT ON;';
PRINT 'DECLARE @StartTime DATETIME = GETDATE()';
PRINT ',@ATTR_DATA NVARCHAR(MAX) = N''''';
PRINT ',@ITEM_ID BIGINT';
PRINT ',@REPOSITORY_ID BIGINT';
PRINT ',@HAS_ERROR_IND BIGINT';
PRINT ',@LAST_UPDATE_DATETIME DATETIME';
PRINT ';';
PRINT '';

PRINT 'SET STATISTICS IO ON;';
PRINT 'SET STATISTICS TIME ON;';

/*** End Start Lines ***/

DECLARE @REPOSITORY_ID_Str VARCHAR(20) = ''
,@ATTR_DATA_Str NVARCHAR(MAX) = N''
,@CurrentCount INT = 0
;
DECLARE @Start_ITEM_ID BIGINT
SELECT @Max_LoopCount = MAX(ITEM_ID) FROM [dbo].[B_MASTER_REPOSITORY_ITEM];
SET @Start_ITEM_ID = FLOOR(@Max_LoopCount/3)

SELECT @Start_ITEM_ID = MIN(ITEM_ID) FROM [dbo].[B_MASTER_REPOSITORY_ITEM] WHERE [ITEM_ID] >= @Start_ITEM_ID;

WHILE @CurrentCount < @Record_Count AND @Start_ITEM_ID < @Max_LoopCount
BEGIN
	
	SELECT @ATTR_DATA = CAST(ATTR_DATA AS NVARCHAR(MAX))
	,@REPOSITORY_ID = REPOSITORY_ID
	,@ITEM_ID = ITEM_ID
	,@HAS_ERROR_IND = HAS_ERROR_IND
	FROM [dbo].[B_MASTER_REPOSITORY_ITEM] WHERE [ITEM_ID] = @Start_ITEM_ID;

	IF @ITEM_ID IS NOT NULL
	BEGIN
		SET @LAST_UPDATE_DATETIME = GETDATE();
		SET @HAS_ERROR_IND = @ITEM_ID % 2;
		IF @REPOSITORY_ID IS NULL
			SET @REPOSITORY_ID_Str = 'NULL';
		ELSE
			SET @REPOSITORY_ID_Str = CAST(@REPOSITORY_ID AS VARCHAR(20));

		
		IF @ATTR_DATA IS NOT NULL
		BEGIN
			IF CHARINDEX('</Item>', @ATTR_DATA , 0) > 0
			BEGIN
				SET @ATTR_DATA_Str = '''' + REPLACE(REPLACE(@ATTR_DATA, '''', ''''''), '</Item>', @AddInElementInXML + '</Item>') + '''';
			END
			ELSE
			BEGIN
				SET @ATTR_DATA_Str = '''' + @ATTR_DATA + '''';
			END
		END
		ELSE
		BEGIN
			SET @ATTR_DATA_Str = 'NULL';
		END;

		PRINT 'SET @LAST_UPDATE_DATETIME = ''' + CAST(@LAST_UPDATE_DATETIME AS VARCHAR(100)) + ''';'
		PRINT 'SET @HAS_ERROR_IND = ' + CAST(@HAS_ERROR_IND AS VARCHAR(10)) + ';';
		PRINT 'SET @REPOSITORY_ID = ' + @REPOSITORY_ID_Str + ';';
		PRINT 'SET @ATTR_DATA = ' + @ATTR_DATA_Str  + ';';
		PRINT 'SET @ITEM_ID = ' + CAST(@ITEM_ID AS VARCHAR(10)) + ';';
		--PRINT 'UPDATE [dbo].[B_MASTER_REPOSITORY_ITEM] SET ';
		--PRINT ' LAST_UPDATE_DATETIME = ''' + CAST(@LAST_UPDATE_DATETIME AS VARCHAR(100)) + '''';
		--PRINT ',HAS_ERROR_IND = ' + CAST(@HAS_ERROR_IND AS VARCHAR(10));
		--PRINT ',REPOSITORY_ID = ' + @REPOSITORY_ID_Str;
		--PRINT ',ATTR_DATA = ' + @ATTR_DATA_Str ;
		--PRINT ' WHERE [ITEM_ID] = ' + CAST(@ITEM_ID AS VARCHAR(20)) + ';';

		PRINT 'UPDATE [dbo].[B_MASTER_REPOSITORY_ITEM] SET LAST_UPDATE_DATETIME =  @LAST_UPDATE_DATETIME, HAS_ERROR_IND = @HAS_ERROR_IND, REPOSITORY_ID = @REPOSITORY_ID, ATTR_DATA = @ATTR_DATA  WHERE [ITEM_ID] = @ITEM_ID';
		IF (@IsPartitionKeyInFilter = 1)
		BEGIN
			IF @REPOSITORY_ID IS NULL 
			BEGIN
				PRINT ' AND REPOSITORY_ID = NULL';
			END
			ELSE
			BEGIN
				PRINT ' AND REPOSITORY_ID = @REPOSITORY_ID';
			END;
		END;

		PRINT ';';
		


		SET @CurrentCount = @CurrentCount + 1;
	END; /* IF @ITEM_ID IS NOT NULL */

	SET @Start_ITEM_ID = @Start_ITEM_ID + 1;
END;


/*** Finish Lines ***/
PRINT 'SET STATISTICS IO OFF;';
PRINT 'SET STATISTICS TIME OFF;';
PRINT 'PRINT ''Elasped Time(seconds):'' + CAST( (DATEDIFF(second, @StartTime, GETDATE())) AS VARCHAR(20));';

IF @Is_FullText_Enabled = 1
BEGIN
PRINT '';
PRINT 'ALTER FULLTEXT INDEX ON [B_MASTER_REPOSITORY_ITEM] ENABLE;';
PRINT 'ALTER FULLTEXT INDEX ON [B_MASTER_REPOSITORY_ITEM] START INCREMENTAL POPULATION;';
PRINT '';
END;

PRINT 'SET NOCOUNT OFF;';


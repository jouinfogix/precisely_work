
/* Create FileGroup and File for data */

ALTER DATABASE [epim] ADD FILEGROUP [mFileGroup1];
ALTER DATABASE [epim] ADD FILE (NAME = [mFile1],
     FILENAME = 'D:\rdsdbdata\DATA\mFile1.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mFileGroup1];
ALTER DATABASE [epim] ADD FILEGROUP [mFileGroup2];
ALTER DATABASE [epim] ADD FILE (NAME = [mFile2],
     FILENAME = 'D:\rdsdbdata\DATA\mFile2.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mFileGroup2];
ALTER DATABASE [epim] ADD FILEGROUP [mFileGroup3];
ALTER DATABASE [epim] ADD FILE (NAME = [mFile3],
     FILENAME = 'D:\rdsdbdata\DATA\mFile3.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mFileGroup3];
ALTER DATABASE [epim] ADD FILEGROUP [mFileGroup4];
ALTER DATABASE [epim] ADD FILE (NAME = [mFile4],
     FILENAME = 'D:\rdsdbdata\DATA\mFile4.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mFileGroup4];
ALTER DATABASE [epim] ADD FILEGROUP [mFileGroup5];
ALTER DATABASE [epim] ADD FILE (NAME = [mFile5],
     FILENAME = 'D:\rdsdbdata\DATA\mFile5.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mFileGroup5];
ALTER DATABASE [epim] ADD FILEGROUP [mFileGroup6];
ALTER DATABASE [epim] ADD FILE (NAME = [mFile6],
     FILENAME = 'D:\rdsdbdata\DATA\mFile6.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mFileGroup6];
ALTER DATABASE [epim] ADD FILEGROUP [mFileGroup7];
ALTER DATABASE [epim] ADD FILE (NAME = [mFile7],
     FILENAME = 'D:\rdsdbdata\DATA\mFile7.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mFileGroup7];
ALTER DATABASE [epim] ADD FILEGROUP [mFileGroup8];
ALTER DATABASE [epim] ADD FILE (NAME = [mFile8],
     FILENAME = 'D:\rdsdbdata\DATA\mFile8.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mFileGroup8];
ALTER DATABASE [epim] ADD FILEGROUP [mFileGroup9];
ALTER DATABASE [epim] ADD FILE (NAME = [mFile9],
     FILENAME = 'D:\rdsdbdata\DATA\mFile9.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mFileGroup9];
ALTER DATABASE [epim] ADD FILEGROUP [mFileGroup10];
ALTER DATABASE [epim] ADD FILE (NAME = [mFile10],
     FILENAME = 'D:\rdsdbdata\DATA\mFile10.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mFileGroup10];

/* Create FileGroup and File for index */


ALTER DATABASE [epim] ADD FILEGROUP [mIndexFileGroup1];
ALTER DATABASE [epim] ADD FILE (NAME = [mIndexFile1],
     FILENAME = 'D:\rdsdbdata\DATA\mIndexFile1.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mIndexFileGroup1];
ALTER DATABASE [epim] ADD FILEGROUP [mIndexFileGroup2];
ALTER DATABASE [epim] ADD FILE (NAME = [mIndexFile2],
     FILENAME = 'D:\rdsdbdata\DATA\mIndexFile2.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mIndexFileGroup2];
ALTER DATABASE [epim] ADD FILEGROUP [mIndexFileGroup3];
ALTER DATABASE [epim] ADD FILE (NAME = [mIndexFile3],
     FILENAME = 'D:\rdsdbdata\DATA\mIndexFile3.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mIndexFileGroup3];
ALTER DATABASE [epim] ADD FILEGROUP [mIndexFileGroup4];
ALTER DATABASE [epim] ADD FILE (NAME = [mIndexFile4],
     FILENAME = 'D:\rdsdbdata\DATA\mIndexFile4.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mIndexFileGroup4];
ALTER DATABASE [epim] ADD FILEGROUP [mIndexFileGroup5];
ALTER DATABASE [epim] ADD FILE (NAME = [mIndexFile5],
     FILENAME = 'D:\rdsdbdata\DATA\mIndexFile5.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mIndexFileGroup5];
ALTER DATABASE [epim] ADD FILEGROUP [mIndexFileGroup6];
ALTER DATABASE [epim] ADD FILE (NAME = [mIndexFile6],
     FILENAME = 'D:\rdsdbdata\DATA\mIndexFile6.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mIndexFileGroup6];
ALTER DATABASE [epim] ADD FILEGROUP [mIndexFileGroup7];
ALTER DATABASE [epim] ADD FILE (NAME = [mIndexFile7],
     FILENAME = 'D:\rdsdbdata\DATA\mIndexFile7.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mIndexFileGroup7];
ALTER DATABASE [epim] ADD FILEGROUP [mIndexFileGroup8];
ALTER DATABASE [epim] ADD FILE (NAME = [mIndexFile8],
     FILENAME = 'D:\rdsdbdata\DATA\mIndexFile8.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mIndexFileGroup8];
ALTER DATABASE [epim] ADD FILEGROUP [mIndexFileGroup9];
ALTER DATABASE [epim] ADD FILE (NAME = [mIndexFile9],
     FILENAME = 'D:\rdsdbdata\DATA\mIndexFile9.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mIndexFileGroup9];
ALTER DATABASE [epim] ADD FILEGROUP [mIndexFileGroup10];
ALTER DATABASE [epim] ADD FILE (NAME = [mIndexFile10],
     FILENAME = 'D:\rdsdbdata\DATA\mIndexFile10.ndf',
     SIZE = 10MB, MAXSIZE = UNLIMITED, FILEGROWTH = 10MB ) TO FILEGROUP [mIndexFileGroup10];

/* Create Parition Function and Partition Schema */

USE [epim]
GO

CREATE FUNCTION [dbo].[mHashPartition] (@ID BIGINT)
 RETURNS TINYINT
 WITH SCHEMABINDING
 AS
 BEGIN
       RETURN @ID % 10;
 END;
GO

CREATE PARTITION FUNCTION [mHashPartitionFunction](TINYINT)
  AS RANGE LEFT FOR VALUES (0,1,2,3,4,5,6,7,8);
GO

CREATE PARTITION SCHEME [mPartitionScheme]
 AS PARTITION [mHashPartitionFunction]
 TO ([mFileGroup1],[mFileGroup2],[mFileGroup3],[mFileGroup4],[mFileGroup5],[mFileGroup6],[mFileGroup7],[mFileGroup8],[mFileGroup9],[mFileGroup10]);
GO

CREATE PARTITION SCHEME [mIndexPartitionScheme]
 AS PARTITION [mHashPartitionFunction]
 TO ([mIndexFileGroup1],[mIndexFileGroup2],[mIndexFileGroup3],[mIndexFileGroup4],[mIndexFileGroup5],[mIndexFileGroup6],[mIndexFileGroup7],[mIndexFileGroup8],[mIndexFileGroup9],[mIndexFileGroup10]);
GO

/* Re-create Primary Key with Partition Schema binding */

ALTER TABLE [dbo].[B_MASTER_REPOSITORY_ITEM] ADD [PartitionKey] AS [dbo].[mHashPartition](ITEM_ID) PERSISTED NOT NULL;
GO


ALTER TABLE [dbo].[B_MASTER_REPOSITORY_ITEM] DROP CONSTRAINT [pk__b_master_repo_item];
GO

ALTER TABLE [dbo].[B_MASTER_REPOSITORY_ITEM] ADD  CONSTRAINT [pk__b_master_repo_item] PRIMARY KEY NONCLUSTERED ([ITEM_ID]) ON  [UserData];
GO

CREATE CLUSTERED INDEX [B_MASTER_REP_ITEM_REPO_ID_CLUSTER] ON [dbo].[B_MASTER_REPOSITORY_ITEM]([REPOSITORY_ID]) ON [mPartitionScheme]([PartitionKey]);
GO

/* Re-Create non-clustered Indexes */

CREATE NONCLUSTERED INDEX [B_MASTER_REP_ITEM_IE1] ON [dbo].[B_MASTER_REPOSITORY_ITEM] ( REPOSITORY_ID ASC, ITEM_ID ASC, HAS_ERROR_IND ASC ) INCLUDE ( [PartitionKey] )  WITH (PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DROP_EXISTING = ON ) ON [mIndexPartitionScheme]([PartitionKey]);
GO

CREATE NONCLUSTERED INDEX [B_MASTER_REP_ITEM_IE2] ON [dbo].[B_MASTER_REPOSITORY_ITEM] ( REPOSITORY_ID ASC, PLT_ITEM_ID ASC ) INCLUDE ( [PartitionKey] )  WITH (PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DROP_EXISTING = ON ) ON [mIndexPartitionScheme]([PartitionKey]);
GO

CREATE NONCLUSTERED INDEX [B_MASTER_REP_ITEM_IE3] ON [dbo].[B_MASTER_REPOSITORY_ITEM] ( REPOSITORY_ID ASC, PK_COL_1 ASC, PK_COL_2 ASC, PK_COL_3 ASC, PK_COL_4 ASC, PK_COL_5 ASC ) INCLUDE ( [PartitionKey] )  WITH (PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DROP_EXISTING = ON ) ON [mIndexPartitionScheme]([PartitionKey]);
GO

CREATE NONCLUSTERED INDEX [B_MASTER_REP_ITEM_IE4] ON [dbo].[B_MASTER_REPOSITORY_ITEM] ( REPOSITORY_ID ASC, RECORD_STATE ASC, PRODUCTION_STATE ASC, WORKFLOW_STATE ASC ) INCLUDE ( [PartitionKey] )  WITH (PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DROP_EXISTING = ON ) ON [mIndexPartitionScheme]([PartitionKey]);
GO

CREATE NONCLUSTERED INDEX [B_MASTER_REP_ITEM_IE5] ON [dbo].[B_MASTER_REPOSITORY_ITEM] ( REPOSITORY_ID ASC, ATTR_LAST_UPDATE_DATETIME ASC ) INCLUDE ( [PartitionKey] )  WITH (PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DROP_EXISTING = ON ) ON [mIndexPartitionScheme]([PartitionKey]);
GO

CREATE NONCLUSTERED INDEX [B_MASTER_REP_ITEM_IE7] ON [dbo].[B_MASTER_REPOSITORY_ITEM] ( REPOSITORY_ID ASC, ITEM_ID ASC, HAS_ERROR_IND ASC, RECORD_STATE ASC ) INCLUDE ( [PartitionKey] )  WITH (PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DROP_EXISTING = ON ) ON [mIndexPartitionScheme]([PartitionKey]);
GO

CREATE NONCLUSTERED INDEX [B_MASTER_REP_ITEM_STAGING_ITEM_ID] ON [dbo].[B_MASTER_REPOSITORY_ITEM] ( STAGING_ITEM_ID ASC ) INCLUDE ( [PartitionKey] )  WITH (PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DROP_EXISTING = ON ) ON [mIndexPartitionScheme]([PartitionKey]);
GO

CREATE NONCLUSTERED INDEX [B_MASTER_REPOSITORY_ITEM_IE6] ON [dbo].[B_MASTER_REPOSITORY_ITEM] ( REPOSITORY_ID ASC, STAGING_ITEM_ID ASC ) INCLUDE ( [PartitionKey] )  WITH (PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, DROP_EXISTING = ON ) ON [mIndexPartitionScheme]([PartitionKey]);
GO


